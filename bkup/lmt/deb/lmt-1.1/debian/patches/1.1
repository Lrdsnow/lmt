Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 lmt (1.0-1) unstable; urgency=medium
 .
   * Initial release (Closes: #nnnn)  <nnnn is the bug number of your ITP>
Author: Lrdsnow _ <Lrdsnow101@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2021-12-11

--- lmt-1.0.orig/lmt
+++ lmt-1.0/lmt
@@ -18,6 +18,64 @@ fsrc="N"
 nsrcs="REPO1"
 cdsrcs=1
 pkge=""
+allpkgs=99
+deb="N"
+
+check_deb() {
+  fsrc="N"
+  pkge=""
+  src="https://mc.lrdsnow.repl.co/pkgs"
+  fsrc="N"
+  nsrcs="REPO1"
+  cdsrcs=1
+  allpkgs=99
+  deb="N"
+  while [[ $fsrc = "N" ]]; do
+    source ~/.lmt/srcs/srcs.sh
+    csrc=${!nsrcs}
+    wget "$csrc/lmt.repo" -q -O ~/test.txt && pkge="y" || pkge="n"
+    if [[ $pkge = "y" ]]; then
+      deb="Y"
+      src=$csrc
+      check_deb_repo
+      rm ~/test.txt
+      exit 1
+    else
+      cdsrcs=$(($cdsrcs + 1))
+      nsrcs="REPO"$cdsrcs
+      if [[ $NOR < $cdsrcs ]]; then
+        fsrc="Y"
+        echo "E: Unable to locate package $pkg"
+        exit 1
+      fi
+    fi
+  done
+}
+
+debinstall() {
+  wget "$src/lmt.repo" -q -O ~/lmt.repo
+  links=$(cat ~/lmt.repo | grep -Eo "(http|https)://[a-zA-Z0-9./?=_%:-]*" | sort -u) && links=(${links[@]}) && link=$(echo "${links[$linkint]}")
+  names=$(sed 1,2d ~/lmt.repo | cut -f1 -d"=") && names=(${names[@]}) && name=$(echo "${names[$nameint]}")
+  wget "$link" -q -O ~/.lmt/pkgs/$pkg.deb
+  sudo dpkg -i ~/.lmt/pkgs/$pkg.deb && rm ~/.lmt/pkgs/$pkg.deb && exit
+}
+
+check_deb_repo() {
+  nameint=-1
+  while :; do
+    nameint=$(($nameint + 1))
+    names=$(sed 1,2d ~/lmt.repo | cut -f1 -d"=") && names=(${names[@]}) && name=$(echo "${names[$nameint]}")
+    if [[ $pkg = $name ]]; then
+      linkint=$nameint
+      debinstall
+    else
+      if [[ $name = "" ]]; then
+        echo "E: Unable to locate package $pkg"
+        exit
+      fi
+    fi
+  done
+}
 
 check_dist() {
   distc="$(awk '/^ID=/' /etc/*-release | awk -F'=' '{ print tolower($2) }')"
@@ -98,7 +156,7 @@ check-repo() {
       cdsrcs=$(($cdsrcs + 1))
       nsrcs="REPO"$cdsrcs
       if [[ $NOR < $cdsrcs ]]; then
-        echo "E: Unable to locate package $pkg"
+        check_deb
         exit 1
       fi
     fi
@@ -119,12 +177,12 @@ mcginstall() {
   dpkgver=$pkgver".txt"
   wget "$src/$pkg/$dpkgver" -q -O ~/.lmt/pkgs/$pkg/version.txt && pkge="y" || pkge="n"
   if [[ $pkge != "y" ]]; then
-    echo "Unable to locate package $pkg"
+    echo "E: Unable to locate package $pkg"
     rm -rf ~/.lmt/pkgs/$pkg
     exit
   else
     pkgver="$(grep -o 'v[^"]*' ~/.lmt/pkgs/$pkg/version.txt)"
-    echo "Installing $pkg ($pkgver)"
+    echo "Installing $pkg ($pkgver) ..."
   fi
   wget "$src/$pkg/$pkg.zip" -O ~/$pkg.zip -q
   unzip -qq ~/$pkg.zip -d ~/.lmt/pkgs/$pkg/
